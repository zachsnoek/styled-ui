{"version":3,"sources":["webpack:///static/23.b41d3533.chunk.js","webpack:///./catalog/parameter-sentence/command-sentence.md?2d9a","webpack:///./catalog/parameter-sentence/command-sentence.md"],"names":["webpackJsonp","2169","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","2244"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCF7B,GAAIC,GAAQ,EAAQ,GAChBC,EAAmB,EAAQ,IAC3BC,EAAe,EAAQ,KAAWA,YAClCA,GAAaC,aACfD,EAAeA,EAAaE,QAE9B,IAAIC,GAAsBJ,GACxBK,YAAa,sBACbC,gBAAiB,WACf,OAAQC,QAAS,EAAQ,QAE3BC,mBAAoB,aAUpBC,OAAQ,WACN,MAAOV,GAAMW,cAAcT,EAAcU,OAAOC,UAAWC,KAAKC,OAAQP,QAASM,KAAKE,MAAMR,aAGhGH,GAAoBY,oBAAqB,EACzCpB,EAAOC,QAAUO,GDUfa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAOC,QAAU","file":"static/23.b41d3533.chunk.js","sourcesContent":["webpackJsonp([23],{\n\n/***/ 2169:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(0);\n    var createReactClass = __webpack_require__(94);\n    var PageRenderer = __webpack_require__(460).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(2244)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./command-sentence.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./command-sentence.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 2244:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## Parameter Sentence with CommandSentence\\n\\nParameter sentences are made to work with [@faithlife/command-sentence-control](https://git/Logos/command-sentence-control) (git enterprise link)\\n\\nBelow is an example usage\\n\\n```code\\nlang: jsx\\n---\\n<ParameterSentenceDemo>\\n\\t<ParameterSentence accessibilityFormLabel=\\\"Tithe Calculator\\\">\\n\\t\\t<CommandSentence\\n\\t\\t\\ttemplate={'I want to give %PERCENTAGE% (%PREPOST% 19% taxes) of my %SCHEDULE% income of %INCOME%.'}\\n\\t\\t>\\n\\t\\t\\t<CommandSentence.Field name=\\\"PERCENTAGE\\\">\\n\\t\\t\\t\\t<ParameterInputBox\\n\\t\\t\\t\\t\\tdefaultValue=\\\"10\\\"\\n\\t\\t\\t\\t\\tvalue={state.percentage}\\n\\t\\t\\t\\t\\tonChange={event => setState({ percentage: event.target.value })}\\n\\t\\t\\t\\t\\tformatValue={val => `${val}%`}\\n\\t\\t\\t\\t\\twidth=\\\"35px\\\"\\n\\t\\t\\t\\t\\taccessibilityLabel={'Percent of income to tithe'}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</CommandSentence.Field>\\n\\t\\t\\t<CommandSentence.Field name=\\\"PREPOST\\\">\\n\\t\\t\\t\\t<ParameterSelect\\n\\t\\t\\t\\t\\tselectedId={state.prepost}\\n\\t\\t\\t\\t\\tonItemSelect={item => setState({ prepost: item })}\\n\\t\\t\\t\\t\\toptions={prePostOptions}\\n\\t\\t\\t\\t\\taccessibilityLabel={'Should give tithe before or after taxes'}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</CommandSentence.Field>\\n\\t\\t\\t<CommandSentence.Field name=\\\"SCHEDULE\\\">\\n\\t\\t\\t\\t<ParameterSelect\\n\\t\\t\\t\\t\\tselectedId={state.schedule}\\n\\t\\t\\t\\t\\tonItemSelect={item => setState({ schedule: item })}\\n\\t\\t\\t\\t\\toptions={scheduleOptions}\\n\\t\\t\\t\\t\\taccessibilityLabel={'Pay schedule of income'}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</CommandSentence.Field>\\n\\t\\t\\t<CommandSentence.Field name=\\\"INCOME\\\">\\n\\t\\t\\t\\t<ParameterInputBox\\n\\t\\t\\t\\t\\tdefaultValue=\\\"55700\\\"\\n\\t\\t\\t\\t\\tvalue={state.income}\\n\\t\\t\\t\\t\\tonChange={event => setState({ income: event.target.value })}\\n\\t\\t\\t\\t\\tformatValue={val => `$${val}`}\\n\\t\\t\\t\\t\\twidth=\\\"50px\\\"\\n\\t\\t\\t\\t\\taccessibilityLabel={'Income per pay schedule period'}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</CommandSentence.Field>\\n\\t\\t</CommandSentence>\\n\\t</ParameterSentence>\\n</ParameterSentenceDemo>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/23.b41d3533.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./command-sentence.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./command-sentence.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./command-sentence.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/parameter-sentence/command-sentence.md\n// module id = 2169\n// module chunks = 23","module.exports = \"## Parameter Sentence with CommandSentence\\n\\nParameter sentences are made to work with [@faithlife/command-sentence-control](https://git/Logos/command-sentence-control) (git enterprise link)\\n\\nBelow is an example usage\\n\\n```code\\nlang: jsx\\n---\\n<ParameterSentenceDemo>\\n\\t<ParameterSentence accessibilityFormLabel=\\\"Tithe Calculator\\\">\\n\\t\\t<CommandSentence\\n\\t\\t\\ttemplate={'I want to give %PERCENTAGE% (%PREPOST% 19% taxes) of my %SCHEDULE% income of %INCOME%.'}\\n\\t\\t>\\n\\t\\t\\t<CommandSentence.Field name=\\\"PERCENTAGE\\\">\\n\\t\\t\\t\\t<ParameterInputBox\\n\\t\\t\\t\\t\\tdefaultValue=\\\"10\\\"\\n\\t\\t\\t\\t\\tvalue={state.percentage}\\n\\t\\t\\t\\t\\tonChange={event => setState({ percentage: event.target.value })}\\n\\t\\t\\t\\t\\tformatValue={val => `${val}%`}\\n\\t\\t\\t\\t\\twidth=\\\"35px\\\"\\n\\t\\t\\t\\t\\taccessibilityLabel={'Percent of income to tithe'}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</CommandSentence.Field>\\n\\t\\t\\t<CommandSentence.Field name=\\\"PREPOST\\\">\\n\\t\\t\\t\\t<ParameterSelect\\n\\t\\t\\t\\t\\tselectedId={state.prepost}\\n\\t\\t\\t\\t\\tonItemSelect={item => setState({ prepost: item })}\\n\\t\\t\\t\\t\\toptions={prePostOptions}\\n\\t\\t\\t\\t\\taccessibilityLabel={'Should give tithe before or after taxes'}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</CommandSentence.Field>\\n\\t\\t\\t<CommandSentence.Field name=\\\"SCHEDULE\\\">\\n\\t\\t\\t\\t<ParameterSelect\\n\\t\\t\\t\\t\\tselectedId={state.schedule}\\n\\t\\t\\t\\t\\tonItemSelect={item => setState({ schedule: item })}\\n\\t\\t\\t\\t\\toptions={scheduleOptions}\\n\\t\\t\\t\\t\\taccessibilityLabel={'Pay schedule of income'}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</CommandSentence.Field>\\n\\t\\t\\t<CommandSentence.Field name=\\\"INCOME\\\">\\n\\t\\t\\t\\t<ParameterInputBox\\n\\t\\t\\t\\t\\tdefaultValue=\\\"55700\\\"\\n\\t\\t\\t\\t\\tvalue={state.income}\\n\\t\\t\\t\\t\\tonChange={event => setState({ income: event.target.value })}\\n\\t\\t\\t\\t\\tformatValue={val => `$${val}`}\\n\\t\\t\\t\\t\\twidth=\\\"50px\\\"\\n\\t\\t\\t\\t\\taccessibilityLabel={'Income per pay schedule period'}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</CommandSentence.Field>\\n\\t\\t</CommandSentence>\\n\\t</ParameterSentence>\\n</ParameterSentenceDemo>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/parameter-sentence/command-sentence.md\n// module id = 2244\n// module chunks = 23"],"sourceRoot":""}