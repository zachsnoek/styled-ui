{"version":3,"sources":["webpack:///static/18.3d7292ff.chunk.js","webpack:///./catalog/popover/variations-v6.md?ed82","webpack:///./catalog/popover/variations-v6.md"],"names":["webpackJsonp","2172","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","2247"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCF7B,GAAIC,GAAQ,EAAQ,GAChBC,EAAmB,EAAQ,IAC3BC,EAAe,EAAQ,KAAWA,YAClCA,GAAaC,aACfD,EAAeA,EAAaE,QAE9B,IAAIC,GAAsBJ,GACxBK,YAAa,sBACbC,gBAAiB,WACf,OAAQC,QAAS,EAAQ,QAE3BC,mBAAoB,aAUpBC,OAAQ,WACN,MAAOV,GAAMW,cAAcT,EAAcU,OAAOC,UAAWC,KAAKC,OAAQP,QAASM,KAAKE,MAAMR,aAGhGH,GAAoBY,oBAAqB,EACzCpB,EAAOC,QAAUO,GDUfa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAOC,QAAU","file":"static/18.3d7292ff.chunk.js","sourcesContent":["webpackJsonp([18],{\n\n/***/ 2172:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(0);\n    var createReactClass = __webpack_require__(94);\n    var PageRenderer = __webpack_require__(460).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(2247)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 2247:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## Popover v6\\n\\nonFocusAway should always be used according to the spec.\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<PopoverDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen: !state.isOpen })} ref={refs[0]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen && (\\n\\t\\t<Popover reference={refs[0].current} placement=\\\"top\\\" onFocusAway={() => setState({ isOpen: false })}>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n</PopoverDemo>\\n```\\n\\n## Placement\\n\\n```react\\nshowSource: true\\nstate: { isOpen1: false, isOpen2: false, isOpen3: false, isOpen4: false }\\n---\\n<PopoverDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen1: !state.isOpen1 })} ref={refs[1]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen1 && (\\n\\t\\t<Popover reference={refs[1].current} placement=\\\"top\\\" onFocusAway={() => setState({ isOpen1: false })}>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen2: !state.isOpen2 })} ref={refs[2]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen2 && (\\n\\t\\t<Popover reference={refs[2].current} placement=\\\"bottom\\\" onFocusAway={() => setState({ isOpen2: false })}>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen3: !state.isOpen3 })} ref={refs[3]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen3 && (\\n\\t\\t<Popover reference={refs[3].current} placement=\\\"left\\\" onFocusAway={() => setState({ isOpen3: false })}>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen4: !state.isOpen4 })} ref={refs[4]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen4 && (\\n\\t\\t<Popover reference={refs[4].current} placement=\\\"right\\\" onFocusAway={() => setState({ isOpen4: false })}>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n</PopoverDemo>\\n```\\n\\n## Options\\n\\n```react\\nshowSource: true\\nstate: { isOpen1: false, isOpen2: false, isOpen3: false }\\n---\\n<PopoverDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen1: !state.isOpen1 })} ref={refs[5]}>\\n\\t\\tShow a blue Popover!\\n\\t</Button>\\n\\t{state.isOpen1 && (\\n\\t\\t<Popover\\n\\t\\t\\treference={refs[5].current}\\n\\t\\t\\tplacement=\\\"top\\\"\\n\\t\\t\\tonFocusAway={() => setState({ isOpen1: false })}\\n\\t\\t\\tbackgroundColor=\\\"#ebf7ff\\\"\\n\\t\\t>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen2: !state.isOpen2 })} ref={refs[6]}>\\n\\t\\tShow a Popover with multiple custom styles!\\n\\t</Button>\\n\\t{state.isOpen2 && (\\n\\t\\t<Popover\\n\\t\\t\\treference={refs[6].current}\\n\\t\\t\\tplacement=\\\"top\\\"\\n\\t\\t\\tonFocusAway={() => setState({ isOpen2: false })}\\n\\t\\t\\tboxShadow=\\\"\\\"\\n\\t\\t\\tpadding=\\\"18px\\\"\\n\\t\\t\\twidth=\\\"200px\\\"\\n\\t\\t\\tborder=\\\"black solid 1px\\\"\\n\\t\\t\\tzIndex={10}\\n\\t\\t>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen3: !state.isOpen3 })} ref={refs[7]}>\\n\\t\\tShow a Popover without an arrow!\\n\\t</Button>\\n\\t{state.isOpen3 && (\\n\\t\\t<Popover\\n\\t\\t\\treference={refs[7].current}\\n\\t\\t\\tplacement=\\\"top\\\"\\n\\t\\t\\tonFocusAway={() => setState({ isOpen3: false })}\\n\\t\\t\\thideArrow\\n\\t\\t>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n</PopoverDemo>\\n```\\n\\n## Using container prop\\n\\n```react\\nshowSource: true\\nstate: { isOpen1: false, isOpen2 }\\n---\\n// overflow: hidden\\n<PopoverOverflowDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen1: !state.isOpen1 })} ref={refs[8]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen1 && (\\n\\t\\t<Popover reference={refs[8].current} placement=\\\"top\\\" onFocusAway={() => setState({ isOpen1: false })}>\\n\\t\\t\\tI'm inline\\n\\t\\t</Popover>\\n\\t)}\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen2: !state.isOpen2 })} ref={refs[9]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen2 && (\\n\\t\\t<Popover\\n\\t\\t\\treference={refs[9].current}\\n\\t\\t\\tplacement=\\\"top\\\"\\n\\t\\t\\tcontainer=\\\"body\\\"\\n\\t\\t\\tonFocusAway={() => setState({ isOpen2: false })}\\n\\t\\t>\\n\\t\\t\\tI'm thinking with portals!\\n\\t\\t</Popover>\\n\\t)}\\n</PopoverOverflowDemo>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/18.3d7292ff.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/popover/variations-v6.md\n// module id = 2172\n// module chunks = 18","module.exports = \"## Popover v6\\n\\nonFocusAway should always be used according to the spec.\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<PopoverDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen: !state.isOpen })} ref={refs[0]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen && (\\n\\t\\t<Popover reference={refs[0].current} placement=\\\"top\\\" onFocusAway={() => setState({ isOpen: false })}>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n</PopoverDemo>\\n```\\n\\n## Placement\\n\\n```react\\nshowSource: true\\nstate: { isOpen1: false, isOpen2: false, isOpen3: false, isOpen4: false }\\n---\\n<PopoverDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen1: !state.isOpen1 })} ref={refs[1]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen1 && (\\n\\t\\t<Popover reference={refs[1].current} placement=\\\"top\\\" onFocusAway={() => setState({ isOpen1: false })}>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen2: !state.isOpen2 })} ref={refs[2]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen2 && (\\n\\t\\t<Popover reference={refs[2].current} placement=\\\"bottom\\\" onFocusAway={() => setState({ isOpen2: false })}>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen3: !state.isOpen3 })} ref={refs[3]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen3 && (\\n\\t\\t<Popover reference={refs[3].current} placement=\\\"left\\\" onFocusAway={() => setState({ isOpen3: false })}>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen4: !state.isOpen4 })} ref={refs[4]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen4 && (\\n\\t\\t<Popover reference={refs[4].current} placement=\\\"right\\\" onFocusAway={() => setState({ isOpen4: false })}>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n</PopoverDemo>\\n```\\n\\n## Options\\n\\n```react\\nshowSource: true\\nstate: { isOpen1: false, isOpen2: false, isOpen3: false }\\n---\\n<PopoverDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen1: !state.isOpen1 })} ref={refs[5]}>\\n\\t\\tShow a blue Popover!\\n\\t</Button>\\n\\t{state.isOpen1 && (\\n\\t\\t<Popover\\n\\t\\t\\treference={refs[5].current}\\n\\t\\t\\tplacement=\\\"top\\\"\\n\\t\\t\\tonFocusAway={() => setState({ isOpen1: false })}\\n\\t\\t\\tbackgroundColor=\\\"#ebf7ff\\\"\\n\\t\\t>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen2: !state.isOpen2 })} ref={refs[6]}>\\n\\t\\tShow a Popover with multiple custom styles!\\n\\t</Button>\\n\\t{state.isOpen2 && (\\n\\t\\t<Popover\\n\\t\\t\\treference={refs[6].current}\\n\\t\\t\\tplacement=\\\"top\\\"\\n\\t\\t\\tonFocusAway={() => setState({ isOpen2: false })}\\n\\t\\t\\tboxShadow=\\\"\\\"\\n\\t\\t\\tpadding=\\\"18px\\\"\\n\\t\\t\\twidth=\\\"200px\\\"\\n\\t\\t\\tborder=\\\"black solid 1px\\\"\\n\\t\\t\\tzIndex={10}\\n\\t\\t>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen3: !state.isOpen3 })} ref={refs[7]}>\\n\\t\\tShow a Popover without an arrow!\\n\\t</Button>\\n\\t{state.isOpen3 && (\\n\\t\\t<Popover\\n\\t\\t\\treference={refs[7].current}\\n\\t\\t\\tplacement=\\\"top\\\"\\n\\t\\t\\tonFocusAway={() => setState({ isOpen3: false })}\\n\\t\\t\\thideArrow\\n\\t\\t>\\n\\t\\t\\tHello!\\n\\t\\t</Popover>\\n\\t)}\\n</PopoverDemo>\\n```\\n\\n## Using container prop\\n\\n```react\\nshowSource: true\\nstate: { isOpen1: false, isOpen2 }\\n---\\n// overflow: hidden\\n<PopoverOverflowDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen1: !state.isOpen1 })} ref={refs[8]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen1 && (\\n\\t\\t<Popover reference={refs[8].current} placement=\\\"top\\\" onFocusAway={() => setState({ isOpen1: false })}>\\n\\t\\t\\tI'm inline\\n\\t\\t</Popover>\\n\\t)}\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ isOpen2: !state.isOpen2 })} ref={refs[9]}>\\n\\t\\tShow a Popover!\\n\\t</Button>\\n\\t{state.isOpen2 && (\\n\\t\\t<Popover\\n\\t\\t\\treference={refs[9].current}\\n\\t\\t\\tplacement=\\\"top\\\"\\n\\t\\t\\tcontainer=\\\"body\\\"\\n\\t\\t\\tonFocusAway={() => setState({ isOpen2: false })}\\n\\t\\t>\\n\\t\\t\\tI'm thinking with portals!\\n\\t\\t</Popover>\\n\\t)}\\n</PopoverOverflowDemo>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/popover/variations-v6.md\n// module id = 2247\n// module chunks = 18"],"sourceRoot":""}