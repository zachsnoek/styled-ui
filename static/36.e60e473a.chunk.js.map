{"version":3,"sources":["webpack:///static/36.e60e473a.chunk.js","webpack:///./catalog/input/select.md?0f0b","webpack:///./catalog/input/select.md"],"names":["webpackJsonp","2123","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","2198"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCF7B,GAAIC,GAAQ,EAAQ,GAChBC,EAAmB,EAAQ,IAC3BC,EAAe,EAAQ,KAAWA,YAClCA,GAAaC,aACfD,EAAeA,EAAaE,QAE9B,IAAIC,GAAsBJ,GACxBK,YAAa,sBACbC,gBAAiB,WACf,OAAQC,QAAS,EAAQ,QAE3BC,mBAAoB,aAUpBC,OAAQ,WACN,MAAOV,GAAMW,cAAcT,EAAcU,OAAOC,UAAWC,KAAKC,OAAQP,QAASM,KAAKE,MAAMR,aAGhGH,GAAoBY,oBAAqB,EACzCpB,EAAOC,QAAUO,GDUfa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAOC,QAAU","file":"static/36.e60e473a.chunk.js","sourcesContent":["webpackJsonp([36],{\n\n/***/ 2123:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(0);\n    var createReactClass = __webpack_require__(94);\n    var PageRenderer = __webpack_require__(460).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(2198)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./select.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./select.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 2198:\n/***/ (function(module, exports) {\n\nmodule.exports = \"A typeahead control with keyboard navigation based on react-select.\\n\\n[Component documentation](https://github.com/JedWatson/react-select)\\n\\n### Migration guide from V1 to v2:\\n\\n- Change the import to `text-input-v2` (see below)\\n- The dedicated CSS import is not required for v2. Delete the typeahead and bootstrap CSS imports when upgrading.\\n- `options` now requires an array of objects instead of strings\\n- `multiple` should be changed to `isMulti` enable the tags input\\n\\n```\\nimport { Select } from '@faithlife/styled-ui/dist/text-input-v2';\\n```\\n\\n### Single select\\n\\n```react\\nshowSource: true\\nstate: { selection: '' }\\n---\\n<div>\\n\\t<div>Current selection: {state.selection}</div>\\n\\t<Select\\n\\t\\tonChange={({ value }) => {\\n\\t\\t\\tsetState({ selection: value });\\n\\t\\t}}\\n\\t\\toptions={[\\n\\t\\t\\t{ value: \\\"washington\\\", label: \\\"Washington\\\" },\\n\\t\\t\\t{ value: \\\"california\\\", label: \\\"California\\\" },\\n\\t\\t\\t{ value: \\\"Texas\\\", label: \\\"Texas\\\" }\\n\\t\\t]}\\n\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t/>\\n</div>\\n```\\n\\n### Single select without search\\n\\n```react\\nshowSource: true\\nstate: { selection: '' }\\n---\\n<div>\\n\\t<div>Current selection: {state.selection}</div>\\n\\t<Select\\n\\t\\tonChange={({ value }) => {\\n\\t\\t\\tsetState({ selection: value });\\n\\t\\t}}\\n\\t\\tisSearchable={false}\\n\\t\\toptions={[\\n\\t\\t\\t{ value: \\\"washington\\\", label: \\\"Washington\\\" },\\n\\t\\t\\t{ value: \\\"california\\\", label: \\\"California\\\" },\\n\\t\\t\\t{ value: \\\"Texas\\\", label: \\\"Texas\\\" }\\n\\t\\t]}\\n\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t/>\\n</div>\\n```\\n\\n### Single select in a modal\\n\\n```react\\nshowSource: true\\nstate: { modal: false, value: '', selection: '' }\\n---\\n<div>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ modal: !state.modal })}>Open a modal!</Button>\\n\\t<Modal\\n\\t\\tisOpen={state.modal}\\n\\t\\tcontainer=\\\"body\\\"\\n\\t\\tonClose={() => setState({ modal: false })}\\n\\t\\ttitle=\\\"Test\\\"\\n\\t\\tfooterProps={{\\n\\t\\t\\tcancelButton: { text: 'Cancel', onClick: () => setState({ modal: !state.modal })},\\n\\t\\t}}\\n\\t>\\n\\t\\t<DemoDiv>\\n\\t\\t\\t<div>Current selection: {state.selection}</div>\\n\\t\\t\\t<Select\\n\\t\\t\\t\\tonChange={({ value }) => {\\n\\t\\t\\t\\t\\tsetState({ selection: value });\\n\\t\\t\\t\\t}}\\n\\t\\t\\t\\toptions={[\\n\\t\\t\\t\\t\\t{ value: \\\"washington\\\", label: \\\"Washington\\\" },\\n\\t\\t\\t\\t\\t{ value: \\\"california\\\", label: \\\"California\\\" },\\n\\t\\t\\t\\t\\t{ value: \\\"Texas\\\", label: \\\"Texas\\\" }\\n\\t\\t\\t\\t]}\\n\\t\\t\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t\\t\\t/>\\n\\t\\t</DemoDiv>\\n\\t</Modal>\\n</div>\\n```\\n\\n### Multi select\\n\\n```react\\nshowSource: true\\nstate: { tags: [] }\\n---\\n<div>\\n\\t<div>Current selection: {state.selection}</div>\\n\\t<Select\\n\\t\\tonChange={({ value }) => {\\n\\t\\t\\tsetState({ selection: value });\\n\\t\\t}}\\n\\t\\tisMulti\\n\\t\\toptions={[\\n\\t\\t\\t{ value: \\\"washington\\\", label: \\\"Washington\\\" },\\n\\t\\t\\t{ value: \\\"california\\\", label: \\\"California\\\" },\\n\\t\\t\\t{ value: \\\"Texas\\\", label: \\\"Texas\\\" }\\n\\t\\t]}\\n\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t/>\\n</div>\\n```\\n\\n### Multi select with custom entries\\n\\n```react\\nshowSource: true\\nstate: { tags: [] }\\n---\\n<div>\\n\\t<div>Current selection: {state.selection}</div>\\n\\t<CreatableSelect\\n\\t\\tonChange={({ value }) => {\\n\\t\\t\\tsetState({ selection: value });\\n\\t\\t}}\\n\\t\\tisMulti\\n\\t\\toptions={[\\n\\t\\t\\t{ value: \\\"washington\\\", label: \\\"Washington\\\" },\\n\\t\\t\\t{ value: \\\"california\\\", label: \\\"California\\\" },\\n\\t\\t\\t{ value: \\\"Texas\\\", label: \\\"Texas\\\" }\\n\\t\\t]}\\n\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t/>\\n</div>\\n```\\n\\n### Async select\\n\\n```react\\nshowSource: true\\nstate: { tags: [] }\\n---\\n<AsyncSelectDemo />\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/36.e60e473a.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./select.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./select.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./select.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/input/select.md\n// module id = 2123\n// module chunks = 36","module.exports = \"A typeahead control with keyboard navigation based on react-select.\\n\\n[Component documentation](https://github.com/JedWatson/react-select)\\n\\n### Migration guide from V1 to v2:\\n\\n- Change the import to `text-input-v2` (see below)\\n- The dedicated CSS import is not required for v2. Delete the typeahead and bootstrap CSS imports when upgrading.\\n- `options` now requires an array of objects instead of strings\\n- `multiple` should be changed to `isMulti` enable the tags input\\n\\n```\\nimport { Select } from '@faithlife/styled-ui/dist/text-input-v2';\\n```\\n\\n### Single select\\n\\n```react\\nshowSource: true\\nstate: { selection: '' }\\n---\\n<div>\\n\\t<div>Current selection: {state.selection}</div>\\n\\t<Select\\n\\t\\tonChange={({ value }) => {\\n\\t\\t\\tsetState({ selection: value });\\n\\t\\t}}\\n\\t\\toptions={[\\n\\t\\t\\t{ value: \\\"washington\\\", label: \\\"Washington\\\" },\\n\\t\\t\\t{ value: \\\"california\\\", label: \\\"California\\\" },\\n\\t\\t\\t{ value: \\\"Texas\\\", label: \\\"Texas\\\" }\\n\\t\\t]}\\n\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t/>\\n</div>\\n```\\n\\n### Single select without search\\n\\n```react\\nshowSource: true\\nstate: { selection: '' }\\n---\\n<div>\\n\\t<div>Current selection: {state.selection}</div>\\n\\t<Select\\n\\t\\tonChange={({ value }) => {\\n\\t\\t\\tsetState({ selection: value });\\n\\t\\t}}\\n\\t\\tisSearchable={false}\\n\\t\\toptions={[\\n\\t\\t\\t{ value: \\\"washington\\\", label: \\\"Washington\\\" },\\n\\t\\t\\t{ value: \\\"california\\\", label: \\\"California\\\" },\\n\\t\\t\\t{ value: \\\"Texas\\\", label: \\\"Texas\\\" }\\n\\t\\t]}\\n\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t/>\\n</div>\\n```\\n\\n### Single select in a modal\\n\\n```react\\nshowSource: true\\nstate: { modal: false, value: '', selection: '' }\\n---\\n<div>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" onClick={() => setState({ modal: !state.modal })}>Open a modal!</Button>\\n\\t<Modal\\n\\t\\tisOpen={state.modal}\\n\\t\\tcontainer=\\\"body\\\"\\n\\t\\tonClose={() => setState({ modal: false })}\\n\\t\\ttitle=\\\"Test\\\"\\n\\t\\tfooterProps={{\\n\\t\\t\\tcancelButton: { text: 'Cancel', onClick: () => setState({ modal: !state.modal })},\\n\\t\\t}}\\n\\t>\\n\\t\\t<DemoDiv>\\n\\t\\t\\t<div>Current selection: {state.selection}</div>\\n\\t\\t\\t<Select\\n\\t\\t\\t\\tonChange={({ value }) => {\\n\\t\\t\\t\\t\\tsetState({ selection: value });\\n\\t\\t\\t\\t}}\\n\\t\\t\\t\\toptions={[\\n\\t\\t\\t\\t\\t{ value: \\\"washington\\\", label: \\\"Washington\\\" },\\n\\t\\t\\t\\t\\t{ value: \\\"california\\\", label: \\\"California\\\" },\\n\\t\\t\\t\\t\\t{ value: \\\"Texas\\\", label: \\\"Texas\\\" }\\n\\t\\t\\t\\t]}\\n\\t\\t\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t\\t\\t/>\\n\\t\\t</DemoDiv>\\n\\t</Modal>\\n</div>\\n```\\n\\n### Multi select\\n\\n```react\\nshowSource: true\\nstate: { tags: [] }\\n---\\n<div>\\n\\t<div>Current selection: {state.selection}</div>\\n\\t<Select\\n\\t\\tonChange={({ value }) => {\\n\\t\\t\\tsetState({ selection: value });\\n\\t\\t}}\\n\\t\\tisMulti\\n\\t\\toptions={[\\n\\t\\t\\t{ value: \\\"washington\\\", label: \\\"Washington\\\" },\\n\\t\\t\\t{ value: \\\"california\\\", label: \\\"California\\\" },\\n\\t\\t\\t{ value: \\\"Texas\\\", label: \\\"Texas\\\" }\\n\\t\\t]}\\n\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t/>\\n</div>\\n```\\n\\n### Multi select with custom entries\\n\\n```react\\nshowSource: true\\nstate: { tags: [] }\\n---\\n<div>\\n\\t<div>Current selection: {state.selection}</div>\\n\\t<CreatableSelect\\n\\t\\tonChange={({ value }) => {\\n\\t\\t\\tsetState({ selection: value });\\n\\t\\t}}\\n\\t\\tisMulti\\n\\t\\toptions={[\\n\\t\\t\\t{ value: \\\"washington\\\", label: \\\"Washington\\\" },\\n\\t\\t\\t{ value: \\\"california\\\", label: \\\"California\\\" },\\n\\t\\t\\t{ value: \\\"Texas\\\", label: \\\"Texas\\\" }\\n\\t\\t]}\\n\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t/>\\n</div>\\n```\\n\\n### Async select\\n\\n```react\\nshowSource: true\\nstate: { tags: [] }\\n---\\n<AsyncSelectDemo />\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/input/select.md\n// module id = 2198\n// module chunks = 36"],"sourceRoot":""}