webpackJsonp([18],{2172:function(t,e,n){var o=n(0),r=n(94),s=n(460).PageRenderer;s.__esModule&&(s=s.default);var a=r({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:n(2247)}},componentWillMount:function(){},render:function(){return o.createElement(s,Object.assign({},this.props,{content:this.state.content}))}});a.__catalog_loader__=!0,t.exports=a},2247:function(t,e){t.exports='## Popover v6\n\nonFocusAway should always be used according to the spec.\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<PopoverDemo>\n\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })} ref={refs[0]}>\n\t\tShow a Popover!\n\t</Button>\n\t{state.isOpen && (\n\t\t<Popover reference={refs[0].current} placement="top" onFocusAway={() => setState({ isOpen: false })}>\n\t\t\tHello!\n\t\t</Popover>\n\t)}\n</PopoverDemo>\n```\n\n## Placement\n\n```react\nshowSource: true\nstate: { isOpen1: false, isOpen2: false, isOpen3: false, isOpen4: false }\n---\n<PopoverDemo>\n\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen1: !state.isOpen1 })} ref={refs[1]}>\n\t\tShow a Popover!\n\t</Button>\n\t{state.isOpen1 && (\n\t\t<Popover reference={refs[1].current} placement="top" onFocusAway={() => setState({ isOpen1: false })}>\n\t\t\tHello!\n\t\t</Popover>\n\t)}\n\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen2: !state.isOpen2 })} ref={refs[2]}>\n\t\tShow a Popover!\n\t</Button>\n\t{state.isOpen2 && (\n\t\t<Popover reference={refs[2].current} placement="bottom" onFocusAway={() => setState({ isOpen2: false })}>\n\t\t\tHello!\n\t\t</Popover>\n\t)}\n\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen3: !state.isOpen3 })} ref={refs[3]}>\n\t\tShow a Popover!\n\t</Button>\n\t{state.isOpen3 && (\n\t\t<Popover reference={refs[3].current} placement="left" onFocusAway={() => setState({ isOpen3: false })}>\n\t\t\tHello!\n\t\t</Popover>\n\t)}\n\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen4: !state.isOpen4 })} ref={refs[4]}>\n\t\tShow a Popover!\n\t</Button>\n\t{state.isOpen4 && (\n\t\t<Popover reference={refs[4].current} placement="right" onFocusAway={() => setState({ isOpen4: false })}>\n\t\t\tHello!\n\t\t</Popover>\n\t)}\n</PopoverDemo>\n```\n\n## Options\n\n```react\nshowSource: true\nstate: { isOpen1: false, isOpen2: false, isOpen3: false }\n---\n<PopoverDemo>\n\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen1: !state.isOpen1 })} ref={refs[5]}>\n\t\tShow a blue Popover!\n\t</Button>\n\t{state.isOpen1 && (\n\t\t<Popover\n\t\t\treference={refs[5].current}\n\t\t\tplacement="top"\n\t\t\tonFocusAway={() => setState({ isOpen1: false })}\n\t\t\tbackgroundColor="#ebf7ff"\n\t\t>\n\t\t\tHello!\n\t\t</Popover>\n\t)}\n\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen2: !state.isOpen2 })} ref={refs[6]}>\n\t\tShow a Popover with multiple custom styles!\n\t</Button>\n\t{state.isOpen2 && (\n\t\t<Popover\n\t\t\treference={refs[6].current}\n\t\t\tplacement="top"\n\t\t\tonFocusAway={() => setState({ isOpen2: false })}\n\t\t\tboxShadow=""\n\t\t\tpadding="18px"\n\t\t\twidth="200px"\n\t\t\tborder="black solid 1px"\n\t\t\tzIndex={10}\n\t\t>\n\t\t\tHello!\n\t\t</Popover>\n\t)}\n\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen3: !state.isOpen3 })} ref={refs[7]}>\n\t\tShow a Popover without an arrow!\n\t</Button>\n\t{state.isOpen3 && (\n\t\t<Popover\n\t\t\treference={refs[7].current}\n\t\t\tplacement="top"\n\t\t\tonFocusAway={() => setState({ isOpen3: false })}\n\t\t\thideArrow\n\t\t>\n\t\t\tHello!\n\t\t</Popover>\n\t)}\n</PopoverDemo>\n```\n\n## Using container prop\n\n```react\nshowSource: true\nstate: { isOpen1: false, isOpen2 }\n---\n// overflow: hidden\n<PopoverOverflowDemo>\n\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen1: !state.isOpen1 })} ref={refs[8]}>\n\t\tShow a Popover!\n\t</Button>\n\t{state.isOpen1 && (\n\t\t<Popover reference={refs[8].current} placement="top" onFocusAway={() => setState({ isOpen1: false })}>\n\t\t\tI\'m inline\n\t\t</Popover>\n\t)}\n\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen2: !state.isOpen2 })} ref={refs[9]}>\n\t\tShow a Popover!\n\t</Button>\n\t{state.isOpen2 && (\n\t\t<Popover\n\t\t\treference={refs[9].current}\n\t\t\tplacement="top"\n\t\t\tcontainer="body"\n\t\t\tonFocusAway={() => setState({ isOpen2: false })}\n\t\t>\n\t\t\tI\'m thinking with portals!\n\t\t</Popover>\n\t)}\n</PopoverOverflowDemo>\n```\n'}});
//# sourceMappingURL=18.3d7292ff.chunk.js.map