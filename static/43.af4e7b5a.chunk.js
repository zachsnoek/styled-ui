webpackJsonp([43],{2194:function(t,n,e){var a=e(0),i=e(94),l=e(460).PageRenderer;l.__esModule&&(l=l.default);var o=i({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:e(2269)}},componentWillMount:function(){},render:function(){return a.createElement(l,Object.assign({},this.props,{content:this.state.content}))}});o.__catalog_loader__=!0,t.exports=o},2269:function(t,n){t.exports='These examples use `ag-grid-react` with the Faithlife theme applied.\n\n### Simple Table\n\nThe simplest use of the table. Each column is sortable and resizable. Leave `maxRows` blank for an infinite scroll table.\n\n```react\nshowSource: true\n---\n<div>\n\t<SimpleGrid data={censusData} maxRows={10} onRowClick={row => {alert(row.value)}}>\n\t\t<GridColumn displayName="Name" fieldName="value" defaultSort={GridColumn.sortOptions.ascending} />\n\t\t<GridColumn displayName="Population" fieldName="population" isRightAligned />\n\t\t<GridColumn displayName="Net Population Change" fieldName="populationChange" isRightAligned />\n\t\t<GridColumn displayName="Births" fieldName="births" isRightAligned width={100} isLargeViewportOnly />\n\t\t<GridColumn displayName="Deaths" fieldName="deaths" isRightAligned width={100} isSortable={false} isLargeViewportOnly/>\n\t</SimpleGrid>\n</div>\n```\n\n### Paginated Table\n\nSimple table with pagination.\n\n```react\nshowSource: true\n---\n<div>\n\t<PaginatedGrid data={censusData} maxRows={10}>\n\t\t<GridColumn displayName="Name" fieldName="value" defaultSort={GridColumn.sortOptions.ascending} />\n\t\t<GridColumn displayName="Population" fieldName="population" />\n\t\t<GridColumn displayName="Net Population Change" fieldName="populationChange" />\n\t\t<GridColumn displayName="Births" fieldName="births" />\n\t\t<GridColumn displayName="Deaths" fieldName="deaths" />\n\t</PaginatedGrid>\n</div>\n```\n\n### Example data for Simple and Paginated Table\n\n```code\nland: json\n---\n[\n\t{\n\t\t"id": 0,\n\t\t"value": "Abilene, TX",\n\t\t"areaDesc": "Metropolitan Statistical Area",\n\t\t"population": 165252,\n\t\t"populationChange": 337,\n\t\t"births": 540,\n\t\t"deaths": 406\n\t}\n]\n```\n\n### Tree Table\n\nA table to display tree data. See [Simple Examples](/grid/simple-examples#drag-and-drop-in-treegrid) to see how to enable drag and drop re-ordering.\n\n```react\nshowSource: true\nstate: { }\n---\n<div>\n\t<TreeGrid\n\t\tdata={censusDataFolders}\n\t\tmaxRows={10}\n\t\tautoGroupExpansion={TreeGrid.expandedRowsOptions.topLevel}\n\t>\n\t\t<TreeGrid.GroupColumn displayName="Name" width={500} />\n\t\t<GridColumn displayName="Population" fieldName="population" />\n\t\t<GridColumn displayName="Net Population Change" fieldName="populationChange" />\n\t</TreeGrid>\n</div>\n```\n\n### Example data for Tree Grid\n\n```code\nland: json\n---\n[\n\t{\n\t\t"id": 1,\n\t\t"value": "Metropolitan Statistical Area",\n\t\tchildren: [\n\t\t\t{\n\t\t\t\t"id": 2,\n\t\t\t\t"value": "Pop more than 100k",\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 3,\n\t\t\t\t\t\t"value": "Abilene, TX",\n\t\t\t\t\t\t"population": 165252,\n\t\t\t\t\t\t"populationChange": 337,\n\t\t\t\t\t\t"births": 540,\n\t\t\t\t\t\t"deaths": 406,\n\t\t\t\t\t\t"path": ["Metropolitan Statistical Area", "Pop more than 100k", "Abilene, TX"]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 4,\n\t\t\t\t\t\t"value":"Bellingham, WA",\n\t\t\t\t\t\t"population":201140,\n\t\t\t\t\t\t"births":608,\n\t\t\t\t\t\t"deaths":356\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n]\n```\n'}});
//# sourceMappingURL=43.af4e7b5a.chunk.js.map