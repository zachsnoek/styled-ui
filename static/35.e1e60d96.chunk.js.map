{"version":3,"sources":["webpack:///static/35.e1e60d96.chunk.js","webpack:///./catalog/input/typeahead.md?f940","webpack:///./catalog/input/typeahead.md"],"names":["webpackJsonp","2124","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","2199"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCF7B,GAAIC,GAAQ,EAAQ,GAChBC,EAAmB,EAAQ,IAC3BC,EAAe,EAAQ,KAAWA,YAClCA,GAAaC,aACfD,EAAeA,EAAaE,QAE9B,IAAIC,GAAsBJ,GACxBK,YAAa,sBACbC,gBAAiB,WACf,OAAQC,QAAS,EAAQ,QAE3BC,mBAAoB,aAUpBC,OAAQ,WACN,MAAOV,GAAMW,cAAcT,EAAcU,OAAOC,UAAWC,KAAKC,OAAQP,QAASM,KAAKE,MAAMR,aAGhGH,GAAoBY,oBAAqB,EACzCpB,EAAOC,QAAUO,GDUfa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAOC,QAAU","file":"static/35.e1e60d96.chunk.js","sourcesContent":["webpackJsonp([35],{\n\n/***/ 2124:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(0);\n    var createReactClass = __webpack_require__(94);\n    var PageRenderer = __webpack_require__(460).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(2199)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./typeahead.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./typeahead.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 2199:\n/***/ (function(module, exports) {\n\nmodule.exports = \"A typeahead control with keyboard navigation.\\n\\n```hint|warning\\nThis is a deprecated control! It won't receive any more updates. Please migrate to the new Autocomplete control.\\n```\\n\\n```hint|directive\\nThese components require the [Faithlife Bootstrap base stylesheet](/bootstrap/stylesheet) to be loaded globally in your app.\\n```\\n\\nSource: [`react-bootstrap-typeahead`](https://github.com/Faithlife/react-bootstrap-typeahead)\\n\\n[Component documentation](https://github.com/Faithlife/react-bootstrap-typeahead/blob/master/docs/Usage.md)\\n[More component demos](http://ericgio.github.io/react-bootstrap-typeahead/)\\n\\n```\\nimport { Typeahead } from '@faithlife/styled-ui/dist/text-input';\\nimport '@faithlife/styled-ui/dist/text-input.css';\\n```\\n\\n```react\\nshowSource: true\\nstate: { selection: '' }\\n---\\n<div>\\n\\t<FormGroup>\\n\\t\\t<Label>Current selection: {state.selection}</Label>\\n\\t\\t<Typeahead\\n\\t\\t\\tonChange={value => { setState({ selection: value })}}\\n\\t\\t\\toptions={['Washington','California','Texas']}\\n\\t\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t\\t/>\\n\\t</FormGroup>\\n</div>\\n```\\n\\n### Tags demo\\n```react\\nshowSource: true\\nstate: { tags: [] }\\n---\\n<div>\\n\\t<FormGroup>\\n\\t\\t<Label>Current tags: {JSON.stringify(state.tags)}</Label>\\n\\t\\t<Typeahead\\n\\t\\t\\tmultiple\\n\\t\\t\\tallowNew\\n\\t\\t\\tonChange={value => { setState({ tags: value })}}\\n\\t\\t\\toptions={['very cool','outrageous','slick']}\\n\\t\\t\\tplaceholder=\\\"Add some tags...\\\"\\n\\t\\t\\tnewSelectionPrefix=\\\"New entry: \\\"\\n\\t\\t\\tselectHintOnEnter\\n\\t\\t/>\\n\\t</FormGroup>\\n</div>\\n```\\n\\n### Legacy infered typeahead\\n\\n```react\\nshowSource: false\\nstate: { value: 'Washington', confirmed: false }\\n---\\n<div>\\n\\t<div>\\n\\t\\t<Label>Current selection: {state.value}</Label>\\n\\t\\t<InferredTypeahead\\n\\t\\t\\tconfidence={state.confirmed ? null : 0.9}\\n\\t\\t\\tonChange={value => { setState({ value, confirmed: true })}}\\n\\t\\t\\tonConfirm={value => { setState({ confirmed: true })}}\\n\\t\\t\\toptions={['Washington','California','Texas']}\\n\\t\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t\\t\\tdefaultInputValue={state.value}\\n\\t\\t/>\\n\\t</div>\\n</div>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/35.e1e60d96.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./typeahead.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./typeahead.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./typeahead.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/input/typeahead.md\n// module id = 2124\n// module chunks = 35","module.exports = \"A typeahead control with keyboard navigation.\\n\\n```hint|warning\\nThis is a deprecated control! It won't receive any more updates. Please migrate to the new Autocomplete control.\\n```\\n\\n```hint|directive\\nThese components require the [Faithlife Bootstrap base stylesheet](/bootstrap/stylesheet) to be loaded globally in your app.\\n```\\n\\nSource: [`react-bootstrap-typeahead`](https://github.com/Faithlife/react-bootstrap-typeahead)\\n\\n[Component documentation](https://github.com/Faithlife/react-bootstrap-typeahead/blob/master/docs/Usage.md)\\n[More component demos](http://ericgio.github.io/react-bootstrap-typeahead/)\\n\\n```\\nimport { Typeahead } from '@faithlife/styled-ui/dist/text-input';\\nimport '@faithlife/styled-ui/dist/text-input.css';\\n```\\n\\n```react\\nshowSource: true\\nstate: { selection: '' }\\n---\\n<div>\\n\\t<FormGroup>\\n\\t\\t<Label>Current selection: {state.selection}</Label>\\n\\t\\t<Typeahead\\n\\t\\t\\tonChange={value => { setState({ selection: value })}}\\n\\t\\t\\toptions={['Washington','California','Texas']}\\n\\t\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t\\t/>\\n\\t</FormGroup>\\n</div>\\n```\\n\\n### Tags demo\\n```react\\nshowSource: true\\nstate: { tags: [] }\\n---\\n<div>\\n\\t<FormGroup>\\n\\t\\t<Label>Current tags: {JSON.stringify(state.tags)}</Label>\\n\\t\\t<Typeahead\\n\\t\\t\\tmultiple\\n\\t\\t\\tallowNew\\n\\t\\t\\tonChange={value => { setState({ tags: value })}}\\n\\t\\t\\toptions={['very cool','outrageous','slick']}\\n\\t\\t\\tplaceholder=\\\"Add some tags...\\\"\\n\\t\\t\\tnewSelectionPrefix=\\\"New entry: \\\"\\n\\t\\t\\tselectHintOnEnter\\n\\t\\t/>\\n\\t</FormGroup>\\n</div>\\n```\\n\\n### Legacy infered typeahead\\n\\n```react\\nshowSource: false\\nstate: { value: 'Washington', confirmed: false }\\n---\\n<div>\\n\\t<div>\\n\\t\\t<Label>Current selection: {state.value}</Label>\\n\\t\\t<InferredTypeahead\\n\\t\\t\\tconfidence={state.confirmed ? null : 0.9}\\n\\t\\t\\tonChange={value => { setState({ value, confirmed: true })}}\\n\\t\\t\\tonConfirm={value => { setState({ confirmed: true })}}\\n\\t\\t\\toptions={['Washington','California','Texas']}\\n\\t\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t\\t\\tdefaultInputValue={state.value}\\n\\t\\t/>\\n\\t</div>\\n</div>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/input/typeahead.md\n// module id = 2199\n// module chunks = 35"],"sourceRoot":""}