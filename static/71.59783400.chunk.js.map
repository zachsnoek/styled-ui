{"version":3,"sources":["webpack:///static/71.59783400.chunk.js","webpack:///./catalog/bootstrap/components.md?433a","webpack:///./catalog/bootstrap/components.md"],"names":["webpackJsonp","2187","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","2262"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCF7B,GAAIC,GAAQ,EAAQ,GAChBC,EAAmB,EAAQ,IAC3BC,EAAe,EAAQ,KAAWA,YAClCA,GAAaC,aACfD,EAAeA,EAAaE,QAE9B,IAAIC,GAAsBJ,GACxBK,YAAa,sBACbC,gBAAiB,WACf,OAAQC,QAAS,EAAQ,QAE3BC,mBAAoB,aAUpBC,OAAQ,WACN,MAAOV,GAAMW,cAAcT,EAAcU,OAAOC,UAAWC,KAAKC,OAAQP,QAASM,KAAKE,MAAMR,aAGhGH,GAAoBY,oBAAqB,EACzCpB,EAAOC,QAAUO,GDUfa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAOC,QAAU","file":"static/71.59783400.chunk.js","sourcesContent":["webpackJsonp([71],{\n\n/***/ 2187:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(0);\n    var createReactClass = __webpack_require__(94);\n    var PageRenderer = __webpack_require__(460).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(2262)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./components.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./components.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 2262:\n/***/ (function(module, exports) {\n\nmodule.exports = \"Most Bootstrap 4 components can be used in existing projects, powered by Reactstrap.\\n\\n```hint|warning\\nThese are deprecated controls! They won't receive any more updates. Prefer to use Reactstrap directly in your project if you *need* bootstrap-based controls, but at this point we have replaced all of the controls on this page with our own versions in this library.\\n```\\n\\n```hint|directive\\nThese components require the [Faithlife Bootstrap base stylesheet](/bootstrap/stylesheet) to be loaded globally in your app.\\n```\\n\\n## When to use these components\\n\\nThese components can help get teams working on new apps that don't have a lot of extra time. Typically we create the controls that we need from scratch, but unless care is taken, these controls might have accessibility problems. These bootstrap controls leverage the work already done by the Reactstrap and Bootstrap communities to make your application work well. That said, if there is a component provided in this Bootstrap section that also exists elsewhere in this library (such as Button), prefer to use the Faithlife-maintained component.\\n\\n## How to use\\n\\nImport the [scoped Bootstrap stylesheet into your application](/bootstrap/stylesheet) first. Then:\\n\\n```\\nimport { Bootstrap } from '@faithlife/styled-ui';\\n\\nconst { Button } = Bootstrap;\\n\\nconst MyComponent = props => <Button color=\\\"primary\\\">primary</Button>;\\n\\n```\\n\\nSee the [Reactstrap](https://reactstrap.github.io/) documentation for the component documentation.\\n\\n## Examples\\n\\n```hint|neutral\\nClick the <> on the right to view the sample source.\\n```\\n\\n### Buttons\\n\\n```hint|directive\\nPrefer to use [the non-Bootstrap button component](/button/variations). It's lighter weight and does not depend on a global stylesheet.\\n```\\n\\n```react\\nshowSource: false\\n---\\n<div>\\n\\t<RowWithMargin>\\n\\t\\t<Button className=\\\"m-1\\\" color=\\\"primary\\\">Primary</Button>\\n\\t\\t<Button className=\\\"m-1\\\" color=\\\"primary\\\" outline>Outline</Button>\\n\\t\\t<Button className=\\\"m-1\\\" color=\\\"link\\\">link</Button>\\n\\t</RowWithMargin>\\n\\t<RowWithMargin>\\n\\t\\t<div><Button className=\\\"m-1\\\" color=\\\"primary\\\" size=\\\"sm\\\">Small</Button></div>\\n\\t\\t<div><Button className=\\\"m-1\\\" color=\\\"primary\\\" size=\\\"md\\\">Medium</Button></div>\\n\\t\\t<div><Button className=\\\"m-1\\\" color=\\\"primary\\\" size=\\\"lg\\\">Large</Button></div>\\n\\t</RowWithMargin>\\n</div>\\n```\\n\\n### Button with Dropdown\\n\\n```react\\nshowSource: false\\nstate: { isOpen: false }\\n---\\n<div>\\n<ButtonDropdown isOpen={state.isOpen} toggle={() => setState({ isOpen: !state.isOpen })}>\\n\\t<Button id=\\\"caret\\\" color=\\\"primary\\\">Split Button</Button>\\n\\t<DropdownToggle caret color=\\\"primary\\\" />\\n\\t<DropdownMenu>\\n\\t\\t<DropdownItem header>Header</DropdownItem>\\n\\t\\t<DropdownItem disabled>Action</DropdownItem>\\n\\t\\t<DropdownItem>Another Action</DropdownItem>\\n\\t\\t<DropdownItem divider/>\\n\\t\\t<DropdownItem>Another Action</DropdownItem>\\n\\t</DropdownMenu>\\n</ButtonDropdown>\\n</div>\\n```\\n\\n## Forms\\n\\n```react\\nshowSource: false\\n---\\n<div>\\n\\t<Form>\\n\\t\\t<FormGroup>\\n\\t\\t\\t<Label for=\\\"exampleCheckbox\\\">Checkboxes</Label>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<CustomInput type=\\\"checkbox\\\" id=\\\"exampleCustomCheckbox\\\" label=\\\"Check this custom checkbox\\\" />\\n\\t\\t\\t\\t<CustomInput type=\\\"checkbox\\\" id=\\\"exampleCustomCheckbox2\\\" label=\\\"Or this one\\\" />\\n\\t\\t\\t\\t<CustomInput type=\\\"checkbox\\\" id=\\\"exampleCustomCheckbox3\\\" label=\\\"But not this disabled one\\\" disabled />\\n\\t\\t\\t</div>\\n\\t\\t</FormGroup>\\n\\t\\t<FormGroup>\\n\\t\\t\\t<Label for=\\\"exampleCheckbox\\\">Radios</Label>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<CustomInput type=\\\"radio\\\" id=\\\"exampleCustomRadio\\\" name=\\\"customRadio\\\" label=\\\"Select this custom radio\\\" />\\n\\t\\t\\t\\t<CustomInput type=\\\"radio\\\" id=\\\"exampleCustomRadio2\\\" name=\\\"customRadio\\\" label=\\\"Or this one\\\" />\\n\\t\\t\\t\\t<CustomInput type=\\\"radio\\\" id=\\\"exampleCustomRadio3\\\" label=\\\"But not this disabled one\\\" disabled />\\n\\t\\t\\t</div>\\n\\t\\t</FormGroup>\\n\\t\\t<FormGroup>\\n\\t\\t\\t<Label for=\\\"exampleCheckbox\\\">Inline</Label>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<CustomInput type=\\\"checkbox\\\" id=\\\"exampleCustomInline\\\" label=\\\"An inline custom input\\\" inline />\\n\\t\\t\\t\\t<CustomInput type=\\\"checkbox\\\" id=\\\"exampleCustomInline2\\\" label=\\\"and another one\\\" inline />\\n\\t\\t\\t</div>\\n\\t\\t</FormGroup>\\n\\t\\t<FormGroup>\\n\\t\\t\\t<Label for=\\\"exampleEmail\\\">Input without validation</Label>\\n\\t\\t\\t<Input />\\n\\t\\t\\t<FormFeedback>You will not be able to see this</FormFeedback>\\n\\t\\t\\t<FormText>Example help text that remains unchanged.</FormText>\\n\\t\\t</FormGroup>\\n\\t\\t<FormGroup>\\n\\t\\t\\t<Label for=\\\"exampleEmail\\\">Valid input</Label>\\n\\t\\t\\t<Input valid />\\n\\t\\t\\t<FormFeedback valid>Sweet! that name is available</FormFeedback>\\n\\t\\t\\t<FormText>Example help text that remains unchanged.</FormText>\\n\\t\\t</FormGroup>\\n\\t\\t<FormGroup>\\n\\t\\t\\t<Label for=\\\"examplePassword\\\">Invalid input</Label>\\n\\t\\t\\t<Input invalid />\\n\\t\\t\\t<FormFeedback>Oh noes! that name is already taken</FormFeedback>\\n\\t\\t\\t<FormText>Example help text that remains unchanged.</FormText>\\n\\t\\t</FormGroup>\\n\\t</Form>\\n</div>\\n```\\n\\n### Popover\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<div>\\n\\t<Button id=\\\"Popover1\\\" onClick={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\tLaunch Popover\\n\\t</Button>\\n\\t<Popover placement=\\\"bottom\\\" isOpen={state.isOpen} target=\\\"Popover1\\\" toggle={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<PopoverHeader>Popover Title</PopoverHeader>\\n\\t\\t<PopoverBody>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</PopoverBody>\\n\\t</Popover>\\n</div>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/71.59783400.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./components.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./components.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./components.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/bootstrap/components.md\n// module id = 2187\n// module chunks = 71","module.exports = \"Most Bootstrap 4 components can be used in existing projects, powered by Reactstrap.\\n\\n```hint|warning\\nThese are deprecated controls! They won't receive any more updates. Prefer to use Reactstrap directly in your project if you *need* bootstrap-based controls, but at this point we have replaced all of the controls on this page with our own versions in this library.\\n```\\n\\n```hint|directive\\nThese components require the [Faithlife Bootstrap base stylesheet](/bootstrap/stylesheet) to be loaded globally in your app.\\n```\\n\\n## When to use these components\\n\\nThese components can help get teams working on new apps that don't have a lot of extra time. Typically we create the controls that we need from scratch, but unless care is taken, these controls might have accessibility problems. These bootstrap controls leverage the work already done by the Reactstrap and Bootstrap communities to make your application work well. That said, if there is a component provided in this Bootstrap section that also exists elsewhere in this library (such as Button), prefer to use the Faithlife-maintained component.\\n\\n## How to use\\n\\nImport the [scoped Bootstrap stylesheet into your application](/bootstrap/stylesheet) first. Then:\\n\\n```\\nimport { Bootstrap } from '@faithlife/styled-ui';\\n\\nconst { Button } = Bootstrap;\\n\\nconst MyComponent = props => <Button color=\\\"primary\\\">primary</Button>;\\n\\n```\\n\\nSee the [Reactstrap](https://reactstrap.github.io/) documentation for the component documentation.\\n\\n## Examples\\n\\n```hint|neutral\\nClick the <> on the right to view the sample source.\\n```\\n\\n### Buttons\\n\\n```hint|directive\\nPrefer to use [the non-Bootstrap button component](/button/variations). It's lighter weight and does not depend on a global stylesheet.\\n```\\n\\n```react\\nshowSource: false\\n---\\n<div>\\n\\t<RowWithMargin>\\n\\t\\t<Button className=\\\"m-1\\\" color=\\\"primary\\\">Primary</Button>\\n\\t\\t<Button className=\\\"m-1\\\" color=\\\"primary\\\" outline>Outline</Button>\\n\\t\\t<Button className=\\\"m-1\\\" color=\\\"link\\\">link</Button>\\n\\t</RowWithMargin>\\n\\t<RowWithMargin>\\n\\t\\t<div><Button className=\\\"m-1\\\" color=\\\"primary\\\" size=\\\"sm\\\">Small</Button></div>\\n\\t\\t<div><Button className=\\\"m-1\\\" color=\\\"primary\\\" size=\\\"md\\\">Medium</Button></div>\\n\\t\\t<div><Button className=\\\"m-1\\\" color=\\\"primary\\\" size=\\\"lg\\\">Large</Button></div>\\n\\t</RowWithMargin>\\n</div>\\n```\\n\\n### Button with Dropdown\\n\\n```react\\nshowSource: false\\nstate: { isOpen: false }\\n---\\n<div>\\n<ButtonDropdown isOpen={state.isOpen} toggle={() => setState({ isOpen: !state.isOpen })}>\\n\\t<Button id=\\\"caret\\\" color=\\\"primary\\\">Split Button</Button>\\n\\t<DropdownToggle caret color=\\\"primary\\\" />\\n\\t<DropdownMenu>\\n\\t\\t<DropdownItem header>Header</DropdownItem>\\n\\t\\t<DropdownItem disabled>Action</DropdownItem>\\n\\t\\t<DropdownItem>Another Action</DropdownItem>\\n\\t\\t<DropdownItem divider/>\\n\\t\\t<DropdownItem>Another Action</DropdownItem>\\n\\t</DropdownMenu>\\n</ButtonDropdown>\\n</div>\\n```\\n\\n## Forms\\n\\n```react\\nshowSource: false\\n---\\n<div>\\n\\t<Form>\\n\\t\\t<FormGroup>\\n\\t\\t\\t<Label for=\\\"exampleCheckbox\\\">Checkboxes</Label>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<CustomInput type=\\\"checkbox\\\" id=\\\"exampleCustomCheckbox\\\" label=\\\"Check this custom checkbox\\\" />\\n\\t\\t\\t\\t<CustomInput type=\\\"checkbox\\\" id=\\\"exampleCustomCheckbox2\\\" label=\\\"Or this one\\\" />\\n\\t\\t\\t\\t<CustomInput type=\\\"checkbox\\\" id=\\\"exampleCustomCheckbox3\\\" label=\\\"But not this disabled one\\\" disabled />\\n\\t\\t\\t</div>\\n\\t\\t</FormGroup>\\n\\t\\t<FormGroup>\\n\\t\\t\\t<Label for=\\\"exampleCheckbox\\\">Radios</Label>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<CustomInput type=\\\"radio\\\" id=\\\"exampleCustomRadio\\\" name=\\\"customRadio\\\" label=\\\"Select this custom radio\\\" />\\n\\t\\t\\t\\t<CustomInput type=\\\"radio\\\" id=\\\"exampleCustomRadio2\\\" name=\\\"customRadio\\\" label=\\\"Or this one\\\" />\\n\\t\\t\\t\\t<CustomInput type=\\\"radio\\\" id=\\\"exampleCustomRadio3\\\" label=\\\"But not this disabled one\\\" disabled />\\n\\t\\t\\t</div>\\n\\t\\t</FormGroup>\\n\\t\\t<FormGroup>\\n\\t\\t\\t<Label for=\\\"exampleCheckbox\\\">Inline</Label>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<CustomInput type=\\\"checkbox\\\" id=\\\"exampleCustomInline\\\" label=\\\"An inline custom input\\\" inline />\\n\\t\\t\\t\\t<CustomInput type=\\\"checkbox\\\" id=\\\"exampleCustomInline2\\\" label=\\\"and another one\\\" inline />\\n\\t\\t\\t</div>\\n\\t\\t</FormGroup>\\n\\t\\t<FormGroup>\\n\\t\\t\\t<Label for=\\\"exampleEmail\\\">Input without validation</Label>\\n\\t\\t\\t<Input />\\n\\t\\t\\t<FormFeedback>You will not be able to see this</FormFeedback>\\n\\t\\t\\t<FormText>Example help text that remains unchanged.</FormText>\\n\\t\\t</FormGroup>\\n\\t\\t<FormGroup>\\n\\t\\t\\t<Label for=\\\"exampleEmail\\\">Valid input</Label>\\n\\t\\t\\t<Input valid />\\n\\t\\t\\t<FormFeedback valid>Sweet! that name is available</FormFeedback>\\n\\t\\t\\t<FormText>Example help text that remains unchanged.</FormText>\\n\\t\\t</FormGroup>\\n\\t\\t<FormGroup>\\n\\t\\t\\t<Label for=\\\"examplePassword\\\">Invalid input</Label>\\n\\t\\t\\t<Input invalid />\\n\\t\\t\\t<FormFeedback>Oh noes! that name is already taken</FormFeedback>\\n\\t\\t\\t<FormText>Example help text that remains unchanged.</FormText>\\n\\t\\t</FormGroup>\\n\\t</Form>\\n</div>\\n```\\n\\n### Popover\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<div>\\n\\t<Button id=\\\"Popover1\\\" onClick={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\tLaunch Popover\\n\\t</Button>\\n\\t<Popover placement=\\\"bottom\\\" isOpen={state.isOpen} target=\\\"Popover1\\\" toggle={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<PopoverHeader>Popover Title</PopoverHeader>\\n\\t\\t<PopoverBody>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</PopoverBody>\\n\\t</Popover>\\n</div>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/bootstrap/components.md\n// module id = 2262\n// module chunks = 71"],"sourceRoot":""}